name: CI/CD Pipeline

on:
  push:
    branches: [master, release]
  pull_request:
    branches: [master, release]
    types: [opened, synchronize]
  

jobs:
  test: 
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with: 
          node-version: '14.x'
      - name: install backend
        run: CI=true npm install --prefix server
      - name: lint backend
        run: npm run lint --prefix server
      - name: test backend
        run: npm test --prefix server
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - name: install frontend
        run: npm install --prefix client
      - name: lint frontend
        run: npm run lint --prefix client
      - name: test frontend
        run: npm test --prefix client
      - name: prepare backend for e2e-tests
        run: |
          cat << EOF > server/.env
          PORT=3000
          HOST_URL='http://localhost:3000'
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          POSTGRES_SSL=true
          EOF
      - name: prepare frontend for building
        run: |
          cat << EOF > client/.env
          REACT_APP_API_BASE=/api/
          EOF
      - name: build frontend
        run: | 
          npm run build --prefix client
      - name: e2e tests
        uses: cypress-io/github-action@v2
        with:
          command: npm run e2e
          start: npm run dev
          wait-on: http://localhost:3000
          working-directory: ./server
  deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/release' }}
    runs-on: ubuntu-20.04
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with: 
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "glacial-shore-58496"
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          # appdir: "server"
          branch: "release"
          usedocker: true
          # docker_heroku_process_type: web
          delay: 30
          healthcheck: "https://glacial-shore-58496.herokuapp.com/api/version"
          checkstring: "OK"
          # rollbackonhealthcheckfailed: true
